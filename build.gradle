plugins {
    id "base"
    id 'org.springframework.boot' version '2.2.10.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.swm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

task print(){
    doLast {
        println "github push complete"
    }
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'

    compile 'io.micrometer:micrometer-registry-prometheus'
    compile 'org.springframework.boot:spring-boot-starter-oauth2-client'
    compile "io.springfox:springfox-swagger2:2.6.1"
    compile 'io.springfox:springfox-swagger-ui:2.6.1'
    compile 'org.qlrm:qlrm:2.0.2'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'com.querydsl:querydsl-jpa'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.5.1'
    implementation group: 'org.modelmapper' , name: 'modelmapper', version: '2.3.6'
    implementation 'com.amazonaws:aws-java-sdk:1.11.133'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //implementation 'com.nimbusds:nimbus-jose-jwt:3.10'
    implementation 'org.apache.httpcomponents:httpclient'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.52'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath }
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝
